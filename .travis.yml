language: rust
rust:
  - nightly

stages:
  - "Build components"

jobs:
  include:
    - stage: "Build components"

      before_script:
        - rustup target add wasm32-unknown-unknown --toolchain nightly
        - cargo install --force wasm-gc

      script:
        - (cd $TRAVIS_BUILD_DIR/isymtope-wasm && cargo build --verbose --release --target wasm32-unknown-unknown)
        - wasm-gc $TRAVIS_BUILD_DIR/target/wasm32-unknown-unknown/release/isymtope_wasm.wasm $TRAVIS_BUILD_DIR/isymtope-server/res/tests/app/playground/isymtope-small.wasm

    - script:
      - (cd $TRAVIS_BUILD_DIR/isymtope-server && cargo build --verbose --release)

before_deploy:
  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
  - if [ ! -d "$HOME/bin" ]; then mkdir -p "$HOME/bin"; fi
  - if [ ! -f "$HOME/bin/kedge"]; then curl -L https://github.com/kedgeproject/kedge/releases/download/v0.9.0/kedge-linux-amd64 -o kedge; fi
  - source /home/travis/google-cloud-sdk/path.bash.inc
  - export PATH="$HOME/bin:$PATH"
  - gcloud --quiet version
  - gcloud --quiet components update
  - gcloud --quiet components update beta
  - gcloud --quiet components update kubectl

deploy:
  - provider: script
    script: /bin/sh ./scripts/deploy-production.sh
    skip_cleanup: true
    on:
      branch: master

cache:
  cargo: true
  directories:
    - "$HOME/.rustup"
    - "$HOME/google-cloud-sdk"

services:
  - docker

env:
  global:
    - GOOGLE_APPLICATION_CREDENTIALS=~/gcloud-service-key.json
    - PROJECT_NAME_PRD=isymtope-demo
    - CLUSTER_NAME_PRD=cluster-1
    - CLOUDSDK_COMPUTE_ZONE=us-central1-a
    - DOCKER_IMAGE_NAME=isymtope-playground
    - KUBE_DEPLOYMENT_NAME=isymtope-demo
    - KUBE_DEPLOYMENT_CONTAINER_NAME=isymtope-playground
