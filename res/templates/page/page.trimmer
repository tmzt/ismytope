## syntax: indent
<!doctype HTML>
<html>
<head>
  <meta charset="utf-8" />
  <script src="https://unpkg.com/redux@3.7.1/dist/redux.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/incrementaldom/0.5.1/incremental-dom.js" defer="defer"></script>
</head>
<body>
  {{ PAGE_BODY_HTML }}

  <script>
    "use strict";

    {{ JS_PRELOAD_SRC }}

    let routes = {};
    ## for pattern in PAGE_ROUTE_KEYS
      routes["{{ pattern }}"] = { handler: function(path, store) {
{{ PAGE_ROUTE_BODIES[pattern] }}
      }};
    ## endfor

    let root = document.querySelector('body')
    let rootReducer = createRootReducer()
    let store = Isymtope.initialize(root, render, rootReducer, routes, false)

    let wrap = window.__IsymtopeUtil;
    let classes = window.__IsymtopeUtil__classes;

    // Events
    ## for event_key in PAGE_EVENT_KEYS
      function {{ event_key }}(_event, props) {
        ## if PAGE_EVENT_ENTERKEYFLAGS[event_key]
          if (_event.keyCode == 13) {
            ## for action_key in PAGE_EVENT_ACTION_KEYS[event_key]
              {{ PAGE_EVENT_ACTION_BODIES[event_key][action_key] }}
            ## endfor
          _event.preventDefault();
          }
        ## else
          ## for action_key in PAGE_EVENT_ACTION_KEYS[event_key]
            {{ PAGE_EVENT_ACTION_BODIES[event_key][action_key] }}
          ## endfor
          _event.preventDefault();
        ## endif
      }
    ## endfor

    // Reducers
    ## for reducer_key in PAGE_REDUCER_KEYS
      function {{ reducer_key }}Reducer(state, action) {
          switch (action.type) {
            ## for action_key in PAGE_REDUCER_ACTION_KEYS[reducer_key]
              case "{{ action_key }}": return {{ PAGE_REDUCER_BODIES[reducer_key][action_key] }};
            ## endfor
            default: return state || {{ PAGE_REDUCER_DEFAULTS[reducer_key] }};
          }
      }
    ## endfor

    ## for component_key in PAGE_COMPONENT_KEYS
      function {{ component_key }}Component(props) {
{{ PAGE_COMPONENT_BODIES[component_key] }}
      }
    ## endfor

    ## for query_key in PAGE_QUERY_KEYS
      function query_{{ query_key }}(store
        ## for query_param in PAGE_QUERY_PARAMS[query_key]
          , {{ query_param }}
        ## endfor
      ) {
{{ PAGE_QUERY_BODIES[query_key] }}
      }
    ## endfor

    function render(store) {
{{ PAGE_RENDER_FUNC_BODY }}
    }

    function createRootReducer() {
      return Redux.combineReducers({
        ## for key in PAGE_REDUCER_KEYS
          {{key}}: {{key}}Reducer,
        ## endfor
        ## for key in PAGE_EXTERN_REDUCER_KEYS
          {{key}}: {{key}}Reducer,
        ## endfor
      });
    };
  </script>
</body>
</html>